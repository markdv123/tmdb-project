[{"/Users/markdevito/Documents/private-projects/tmdb-project/tmdb/src/index.js":"1","/Users/markdevito/Documents/private-projects/tmdb-project/tmdb/src/App.js":"2","/Users/markdevito/Documents/private-projects/tmdb-project/tmdb/src/styles/Theme.js":"3"},{"size":175,"mtime":1612484722682,"results":"4","hashOfConfig":"5"},{"size":6664,"mtime":1612724931717,"results":"6","hashOfConfig":"5"},{"size":1030,"mtime":1612471918716,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1yp51lg",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/markdevito/Documents/private-projects/tmdb-project/tmdb/src/index.js",[],["17","18"],"/Users/markdevito/Documents/private-projects/tmdb-project/tmdb/src/App.js",["19","20","21","22","23"],"import './styles/App.css'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './styles/Theme'\nimport React, { useState, useEffect } from 'react'\nimport {\n  Grid,\n  AppBar,\n  Toolbar,\n  Icon,\n  Typography,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Slide,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from '@material-ui/core'\nimport Axios from 'axios'\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n})\n\nfunction App() {\n  const [movies, setMovies] = useState([])\n  const [search, setSearch] = useState('')\n  const [searched, setSearched] = useState(false)\n  const [result, setResult] = useState([])\n  const [mov, setMov] = useState({})\n  const [open, setOpen] = useState(false)\n  const [favs, setFavs] = useState([])\n\n  const getMovies = async () => {\n    try {\n      const res = await Axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n      setMovies(...movies, res.data.results)\n    } catch (error) {\n      throw error\n    }\n  }\n\n  const getFavs = async () => {\n    try {\n      const favorites = ['448491', '129', '14836', '50456', '1924', '128', '11544', '350', '237791', '8835', '49026', '630', '37797', '37735', '593691', '300668']\n      const newFavs = []\n      for (let i = 0; i < favorites.length; i++) {\n        let res = await Axios.get(`https://api.themoviedb.org/3/movie/${favorites[i]}?api_key=${API_KEY}`)\n        newFavs.push(res.data)\n      }\n      setFavs(newFavs)\n    } catch (error) {\n      throw error\n    }\n  }\n\n  useEffect(() => {\n    getMovies()\n    getFavs()\n  }, [])\n\n  const handleChange = ({ target }) => {\n    setSearch(target.value)\n  }\n\n  const searchMovie = async () => {\n    try {\n      const res = await Axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`)\n      setResult(res.data.results)\n      setSearched(true)\n    } catch (error) {\n      throw error\n    }\n  }\n\n  const handleClickOpen = (movie) => {\n    setMov(movie)\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar style={{ margin: '0 auto' }}>\n            <Icon >videocam</Icon>\n            <Typography variant=\"h6\" style={{ margin: '5px' }}>\n              TMBD Quick Search\n            </Typography>\n            <Icon >videocam</Icon>\n          </Toolbar>\n        </AppBar>\n        <p>Quick access to TMDB's vast database of movie info! View the top trending films on the left, or search for a specific movie on the right. Click on any film poster for more information!</p>\n        <Grid container>\n          <Grid item xs={6}>\n            <h1>Popular Films:</h1>\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n              {movies.length ? (\n                movies.map((movie, i) => (\n                  <div key={i} style={{ margin: '5px' }}>\n                    <Card style={{ width: '200px', height: '280px' }} onClick={() => { handleClickOpen(movie) }}>\n                      <CardContent>\n                        <img className=\"cardImg\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} />\n                        <p style={{ color: 'white' }}>{movie.title}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                ))\n              ) : (<p>loading</p>)}\n            </div>\n          </Grid>\n          <Grid item xs={6}>\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: '15px' }}>\n              <TextField id=\"outlined-basic\" label=\"Search\" variant=\"outlined\" style={{ marginRight: '10px' }} value={search} onChange={(e) => handleChange(e)} />\n              <Button variant=\"contained\" color=\"primary\" onClick={searchMovie}>Search</Button>\n            </div>\n            {searched ? result.length ? (\n              <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginTop: '10px' }}>\n                {result.map((movie, i) => (\n                  <div key={i} style={{ margin: '5px' }}>\n                    <Card style={{ width: '200px', height: '280px' }} onClick={() => { handleClickOpen(movie) }}>\n                      <CardContent>\n                        <img className=\"cardImg\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} />\n                        <p style={{ color: 'white' }}>{movie.title}</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                ))}\n              </div>\n            ) : (<p>No Results</p>) : favs.length ? (\n              <div>\n                <h2>Mark's Favs</h2>\n                <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginTop: '10px' }}>\n                  {favs.map((movie, i) => (\n                    <div key={i} style={{ margin: '5px' }}>\n                      <Card style={{ width: '200px', height: '280px' }} onClick={() => { handleClickOpen(movie) }}>\n                        <CardContent>\n                          <img className=\"cardImg\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} />\n                          <p style={{ color: 'white' }}>{movie.title}</p>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (<p>loading</p>)}\n          </Grid>\n        </Grid>\n        <Dialog\n          open={open}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-slide-title\"\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          {mov.title ? (\n            <div style={{ textAlign: 'center', color: 'white' }}>\n              <DialogTitle id=\"alert-dialog-slide-title\">{mov.title}</DialogTitle>\n              <DialogContent>\n                <img src={`https://image.tmdb.org/t/p/w500/${mov.poster_path}`} />\n                <p>Release Date: {mov.release_date}</p>\n                <p>Original Language: {mov.original_language}</p>\n                <p>{mov.overview}</p>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">Close</Button>\n              </DialogActions>\n            </div>\n          ) : null}\n        </Dialog>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App\n","/Users/markdevito/Documents/private-projects/tmdb-project/tmdb/src/styles/Theme.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":63,"column":6,"nodeType":"32","endLine":63,"endColumn":8,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":110,"column":25,"nodeType":"36","endLine":110,"endColumn":113},{"ruleId":"34","severity":1,"message":"35","line":130,"column":25,"nodeType":"36","endLine":130,"endColumn":113},{"ruleId":"34","severity":1,"message":"35","line":145,"column":27,"nodeType":"36","endLine":145,"endColumn":115},{"ruleId":"34","severity":1,"message":"35","line":168,"column":17,"nodeType":"36","endLine":168,"endColumn":83},{"ruleId":"26","replacedBy":"37"},{"ruleId":"28","replacedBy":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovies'. Either include it or remove the dependency array.","ArrayExpression",["41"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["39"],["40"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [getMovies]",{"range":"44","text":"45"},[1687,1689],"[getMovies]"]